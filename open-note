#!/usr/bin/osascript

# AppleScript to create or open a note with a specified name in Notes.app.
# If the note doesn't exist, it will be created.
#
# Accepts an optional argument with the name of the folder where the note should be created.
# If no argument is provided, the note will be created in the Notes folder.
# The folder name can be a nested folder using "//" as the delimiter.
#
# Usage: open-note "Note Title" ["Folder with //"]
#
# A body can also be passed in file descriptor 3 (stdin is consumed by osascript).
#
# Example:
# {
#     # AppleScript swallows the newlines so we need to use html breaks
#     echo "<br/>$url<br/>"
#     # More stuff to be added here
# } | open-note "Mow the lawn" "Todos//Home" 3<&0
#

on run argv
    if (count of argv) < 1 then
        return "Usage:\n\topen-note \"Note Title\" [\"Folder with //\"]"
    end if
    set nameArg to (item 1 of argv) as string
    if (count of argv) > 1 then
        set folderArg to (item 2 of argv)
    else
        set folderArg to "Notes"
    end if
    try
        set stdin to do shell script "cat 0<&3"
    on error errTxt number errNum
		set stdin to ""
    end try
    MakeNewNote(nameArg, stdin, folderArg)
end run

on MakeNewNote(nameArg, bodyArg, folderArg)
    # "folders" appears to be a keyword! who knew??
    set folderNames to splitText(folderArg, "//")
    tell application "Notes"
        set theContainer to folder (item 1 of folderNames)
        repeat with n from 2 to count of folderNames
            set theContainer to folder (item n of folderNames) of theContainer
        end repeat
        if not exists note nameArg of theContainer then
            # Wrap the title in <h1> to get title format
            set noteBody to "<body><h1 style=\"font-size:20;\">" & nameArg & "</h1>" & bodyArg & "</body>"
            make new note at theContainer with properties {body:noteBody}
        end if
        show note nameArg of theContainer separately true
    end tell
end MakeNewNote

# The following script comes from the AppleScript docs at
# https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/ManipulateText.html#//apple_ref/doc/uid/TP40016239-CH33-SW6
on splitText(theText, theDelimiter)
    set AppleScript's text item delimiters to theDelimiter
    set theTextItems to every text item of theText
    set AppleScript's text item delimiters to ""
    return theTextItems
end splitText